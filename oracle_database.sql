-- Create table space
CREATE TABLESPACE TODOAPP
DATAFILE 'TODOAPP.DBF'
SIZE 50M AUTOEXTEND ON
NEXT 5M MAXSIZE UNLIMITED;

-- Create user named TODOAPP
CREATE USER TODOAPP
IDENTIFIED BY password
DEFAULT TABLESPACE TODOAPP
TEMPORARY TABLESPACE TEMP;

-- Grant nessesaly permission
GRANT UNLIMITED TABLESPACE TO TESTUSER;
GRANT CONNECT, RESOURCE TO TESTUSER;

// Create User table
CREATE TABLE TODO_USER (
id       NUMBER,
username VARCHAR2(50 char)  UNIQUE,
email    VARCHAR2(100 char) UNIQUE,
enabled  NUMBER             DEFAULT 1,
password VARCHAR2(60 char)  NOT NULL,
role     VARCHAR2(50 char)  DEFAULT 'ROLE_GENERAL',

CONSTRAINT pk_TODO_USER PRIMARY KEY (id)
);

-- Create todo table
CREATE TABLE TODO (
id         NUMBER,
title      VARCHAR2(100 CHAR) DEFAULT 'Non titled',
created_at TIMESTAMP          DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP          DEFAULT CURRENT_TIMESTAMP,
user_id    NUMBER             NOT NULL,
finished   NUMBER             DEFAULT 0

CONSTRAINT pk_TODO PRIMARY KEY (id),
CONSTRAINT fk_TODO_TODO_USER FOREIGN KEY (user_id)
  REFERENCES todo_user (id)
);

-- Create action table
CREATE TABLE ACTION (
id      NUMBER,
todo_id NUMBER NOT NULL,
content VARCHAR2(500 CHAR),

CONSTRAINT pk_ACTION PRIMARY KEY (id),
CONSTRAINT fk_ACTION_TODO FOREIGN KEY (todo_id)
  REFERENCES TODO (id)
);

-- Create sequences
-- For TODO_USER
CREATE SEQUENCE TODO_USER_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
START WITH 1
CACHE 20
NOORDER
NOCYCLE;

--For TODO
CREATE SEQUENCE TODO_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
START WITH 1
CACHE 20
NOORDER
NOCYCLE;

-- For ACTION
CREATE SEQUENCE ACTION_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
START WITH 1
CACHE 20
NOORDER
NOCYCLE;

-- Create triggers
-- For TODO_USER
CREATE OR REPLACE TRIGGER TODO_USER_TRG
BEFORE INSERT ON TODO_USER
FOR EACH ROW
BEGIN
  IF :NEW.id IS NULL THEN
    :NEW.id := TODO_USER_SEQ.NEXTVAL;
  END IF;
END;

-- For TODO
CREATE OR REPLACE TRIGGER TODO_TRG
BEFORE INSERT ON TODO
FOR EACH ROW
BEGIN
  IF :NEW.id IS NULL THEN
    :NEW.id := TODO_SEQ.NEXTVAL;
  END IF;
END;

-- For ACTION
CREATE OR REPLACE TRIGGER ACTION_TRG
BEFORE INSERT ON ACTION
FOR EACH ROW
BEGIN
  IF :NEW.id IS NULL THEN
    :NEW.id := ACTION_SEQ.NEXTVAL;
  END IF;
END;

// Create stored procedure
CREATE OR REPLACE PROCEDURE INSERT_TODO_LIST
( pTodoList IN TODO_LIST_OBJ
) AS
vNewTodoId NUMBER;
BEGIN
  -- Generate new todo_id
  vNewTodoId := TODO_SEQ.NEXTVAL;

  -- Create todo
  INSERT INTO TODO (id, title, user_id)
  VALUES (vNewTodoId, pTodoList.title, pTodoList.user_id);

  -- Create actions
  FORALL i IN pTodoList.actions.FIRST..pTodoList.actions.LAST
  INSERT INTO action (todo_id, content)
  VALUES (vNewTodoId, pTodoList.actions(i).content);
END INSERT_TODO_LIST;

-- Insert test datas
-- pasword: password
INSERT INTO todo_user (username, email, password)
VALUES ('EPS', 'eps@eps.com', '$2a$10$mIMYKUkDSJXwfapXZb.iLeQh08BbY8Ic5wIVGM2Q/ZMxRkDtO4nXa');

-- password: password
INSERT INTO todo_user (username, email, password)
VALUES ('Oracle', 'oracle@oracle.com', '$2a$10$mIMYKUkDSJXwfapXZb.iLeQh08BbY8Ic5wIVGM2Q/ZMxRkDtO4nXa');
